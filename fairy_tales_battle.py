# -*- coding: utf-8 -*-
"""Fairy Tales battle.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YEdejU2bZKn_gmsV-uSK6lkgEh7H6WLd
"""

from google.colab import files
import os


uploaded = files.upload()


#filename = list(uploaded.keys())[0]
#print("Original filename:", filename)

#os.rename(filename, "full_text.txt")
#print("Renamed to full_text.txt")

# librrireis
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from collections import Counter
import matplotlib.pyplot as plt

#
nltk.download('punkt')
nltk.download('punkt_tab')
nltk.download('stopwords')

#
with open("full_texts.txt", "r", encoding="utf-8") as f:
    text = f.read()

#
tokens = word_tokenize(text.lower())
tokens = [t for t in tokens if t.isalpha()]  # words only

# stop words removal
stop_words = set(stopwords.words('russian'))
filtered_tokens = [t for t in tokens if t not in stop_words]

# frequeny count
freq = Counter(filtered_tokens)
top_20 = freq.most_common(20)

#
print("Top 20 words:")
for word, count in top_20:
    print(f"{word}: {count}")

# make a graph
words = [word for word, _ in top_20]
counts = [count for _, count in top_20]

plt.figure(figsize=(12, 6))
plt.bar(words, counts, color='skyblue')
plt.title("Top 20 Most Frequent Words in full_texts.txt")
plt.xlabel("Words")
plt.ylabel("Frequency")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""
```
#TRANSLATION
```

"""

import matplotlib.pyplot as plt


words = [
    "Says", "to you", "King_Tsar", "i", "went", "took", "this", "became",
    "home", "son", "Ivan", "Man", "Old man", "said", "asks", "came",
    "day", "Fool", "horse", "brother"
]

frequencies = [
    2798, 1224, 1124, 1076, 924, 861, 852, 824,
    815, 804, 683, 662, 636, 616, 613, 528,
    521, 506, 493, 475
]


plt.figure(figsize=(12, 6))
plt.bar(words, frequencies, color='skyblue')
plt.title("Top 20 Most Frequent Words in Russian tales (Translated)")
plt.xlabel("Words")
plt.ylabel("Frequency")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

from google.colab import files
import os


uploaded = files.upload()


#filename = list(uploaded.keys())[0]
#print("Original filename:", filename)

#os.rename(filename, "ital_text.txt")
#print("Renamed to ital_text.txt")

with open("ital_text.txt", "r", encoding="utf-8") as f:
    text = f.read()

#
tokens = word_tokenize(text.lower())
tokens = [t for t in tokens if t.isalpha()]

#
stop_words = set(stopwords.words('russian'))
filtered_tokens = [t for t in tokens if t not in stop_words]

#
freq = Counter(filtered_tokens)
top_20 = freq.most_common(20)

#
print("Top 20 words:")
for word, count in top_20:
    print(f"{word}: {count}")

#
words = [word for word, _ in top_20]
counts = [count for _, count in top_20]

plt.figure(figsize=(12, 6))
plt.bar(words, counts, color='skyblue')
plt.title("Top 20 Most Frequent Words in ital_text.txt")
plt.xlabel("Words")
plt.ylabel("Frequency")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""

```
# Top 20 words:
King: 290
this: 269
says: 261
Said: 189
Prince: 187
girl: 165
you: 163
daughter: 155
Pippi: 143
Her: 136
princess:
Day 124: 120
very: 110
home: 108
young man: 101
Katerina: 100
said: 98
wife: 98
Again: 98
Palace: 93
```

"""

import matplotlib.pyplot as plt

words = [
    "King", "this", "says", "Said", "Prince", "girl", "you", "daughter", "Pippi", "Her",
    "princess", "Day", "very", "home", "young man", "Katerina", "said", "wife", "Again", "Palace"
]

frequencies = [
    290, 269, 261, 189, 187, 165, 163, 155, 143, 136,
    124, 120, 110, 108, 101, 100, 98, 98, 98, 93
]

plt.figure(figsize=(12, 6))
plt.bar(words, frequencies, color='skyblue')
plt.title("Top 20 Most Frequent Words in Italian tales (Translated)")
plt.xlabel("Words")
plt.ylabel("Frequency")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

!pip install nltk wordcloud

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import RegexpTokenizer
from wordcloud import WordCloud
import matplotlib.pyplot as plt

nltk.download('stopwords')

with open("full_texts.txt", "r", encoding="utf-8") as f:
    text = f.read()

# no punctuation
tokenizer = RegexpTokenizer(r'\b\w+\b')
tokens = tokenizer.tokenize(text.lower())

#
russian_stopwords = set(stopwords.words("russian"))
filtered_tokens = [word for word in tokens if word not in russian_stopwords]

#
text_for_cloud = ' '.join(filtered_tokens)

# font for cyrillic lang
!apt install fonts-dejavu-core -y

#
wordcloud = WordCloud(
    width=1000,
    height=500,
    background_color='white',
    font_path='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf'
).generate(text_for_cloud)

# to show
plt.figure(figsize=(15, 7))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.title("Word Cloud of Russian Fairy Tales", fontsize=20)
plt.show()

!pip install nltk wordcloud

from google.colab import files
uploaded = files.upload()

import nltk
nltk.download('punkt')
nltk.download('stopwords')

with open("ital_text.txt", "r", encoding="utf-8") as f:
    text = f.read()

#
tokenizer = RegexpTokenizer(r'\b\w+\b')
tokens = tokenizer.tokenize(text.lower())

#
russian_stopwords = set(stopwords.words("russian"))
filtered_tokens = [word for word in tokens if word not in russian_stopwords]

#
text_for_cloud = ' '.join(filtered_tokens)

#
!apt install fonts-dejavu-core -y

#
wordcloud = WordCloud(
    width=1000,
    height=500,
    background_color='white',
    font_path='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf'
).generate(text_for_cloud)

#
plt.figure(figsize=(15, 7))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.title("Word Cloud of Italian Fairy Tales", fontsize=20)
plt.show()